plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.github.node-gradle.node' version '3.5.1' // Plugin Node.js
}

group = 'com.placki'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    runtimeOnly 'com.h2database:h2'
}

node {
    version = '18.16.0' // Wersja Node.js
    npmVersion = '9.5.1' // Wersja npm
    download = true // Pobierz Node.js i npm, jeśli nie są zainstalowane
    workDir = layout.buildDirectory.dir("nodejs").get().asFile
    nodeModulesDir = file("frontend")
}


tasks.register('npmBuild', com.github.gradle.node.npm.task.NpmTask) {
    args = ['run', 'build']
    dependsOn 'npmInstall'
    workingDir = file("frontend")
}

tasks.named('processResources') {
    dependsOn 'npmBuild'
    from("frontend/build") {
        into 'static'
    }
}

tasks.named('test') {
    useJUnitPlatform()
}